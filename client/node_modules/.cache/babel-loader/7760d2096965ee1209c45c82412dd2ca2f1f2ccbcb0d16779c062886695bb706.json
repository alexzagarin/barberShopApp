{"ast":null,"code":"var _jsxFileName = \"/Users/mariiakotienieva/Downloads/barbershopalex/client/src/components/BookingForm.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from '../axiosConfig';\n// import { useLocation, useNavigate } from 'react-router-dom';\n//\n// function BookingForm() {\n//     const location = useLocation();\n//     const navigate = useNavigate();\n//     const queryParams = new URLSearchParams(location.search);\n//     const serviceId = queryParams.get('serviceId');\n//\n//     const [bookingDetails, setBookingDetails] = useState({\n//         reservationDate: '',\n//         time: ''\n//     });\n//\n//     const handleChange = (event) => {\n//         setBookingDetails({ ...bookingDetails, [event.target.name]: event.target.value });\n//     };\n//\n//     const handleSubmit = async (event) => {\n//         event.preventDefault();\n//         const fullDateTime = `${bookingDetails.reservationDate}T${bookingDetails.time}:00`; // Ensure correct date-time format\n//         try {\n//             await axios.post('/api/reservations', {\n//                 serviceId,\n//                 reservationDate: fullDateTime,\n//                 status: 'Booked'\n//             });\n//             navigate('/confirmation');\n//         } catch (error) {\n//             console.error('Error making reservation:', error.response.data);\n//         }\n//     };\n//\n//     return (\n//         <div className=\"booking-form\">\n//             <form onSubmit={handleSubmit}>\n//                 <div className=\"form-group\">\n//                     <label>Date</label>\n//                     <input type=\"date\" name=\"reservationDate\" className=\"input-field\" onChange={handleChange} required />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label>Time</label>\n//                     <input type=\"time\" name=\"time\" className=\"input-field\" onChange={handleChange} required />\n//                 </div>\n//                 <button type=\"submit\">Book</button>\n//             </form>\n//         </div>\n//     );\n// }\n//\n// export default BookingForm;\n\n// BookingForm.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from '../axiosConfig'; // Make sure this is pointing to your axios config file with the token setup\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BookingForm() {\n  _s();\n  const [bookingDetails, setBookingDetails] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    date: '',\n    time: ''\n  });\n  const navigate = useNavigate();\n  const handleChange = event => {\n    setBookingDetails({\n      ...bookingDetails,\n      [event.target.name]: event.target.value\n    });\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      name,\n      email,\n      phone,\n      date,\n      time\n    } = bookingDetails;\n    try {\n      const response = await axios.post('/api/reservations', {\n        name,\n        email,\n        phone,\n        date: `${date}T${time}:00`,\n        status: 'Booked'\n      });\n      navigate('/confirmation');\n    } catch (error) {\n      console.error('Error making reservation:', error.response ? error.response.data : 'No response from server');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"booking-form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n}\n_s(BookingForm, \"lfdwWAgdINgm0QgYgE/UOu5jpN8=\", false, function () {\n  return [useNavigate];\n});\n_c = BookingForm;\nexport default BookingForm;\nvar _c;\n$RefreshReg$(_c, \"BookingForm\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","BookingForm","_s","bookingDetails","setBookingDetails","name","email","phone","date","time","navigate","handleChange","event","target","value","handleSubmit","preventDefault","response","post","status","error","console","data","className","children","onSubmit","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mariiakotienieva/Downloads/barbershopalex/client/src/components/BookingForm.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import axios from '../axiosConfig';\n// import { useLocation, useNavigate } from 'react-router-dom';\n//\n// function BookingForm() {\n//     const location = useLocation();\n//     const navigate = useNavigate();\n//     const queryParams = new URLSearchParams(location.search);\n//     const serviceId = queryParams.get('serviceId');\n//\n//     const [bookingDetails, setBookingDetails] = useState({\n//         reservationDate: '',\n//         time: ''\n//     });\n//\n//     const handleChange = (event) => {\n//         setBookingDetails({ ...bookingDetails, [event.target.name]: event.target.value });\n//     };\n//\n//     const handleSubmit = async (event) => {\n//         event.preventDefault();\n//         const fullDateTime = `${bookingDetails.reservationDate}T${bookingDetails.time}:00`; // Ensure correct date-time format\n//         try {\n//             await axios.post('/api/reservations', {\n//                 serviceId,\n//                 reservationDate: fullDateTime,\n//                 status: 'Booked'\n//             });\n//             navigate('/confirmation');\n//         } catch (error) {\n//             console.error('Error making reservation:', error.response.data);\n//         }\n//     };\n//\n//     return (\n//         <div className=\"booking-form\">\n//             <form onSubmit={handleSubmit}>\n//                 <div className=\"form-group\">\n//                     <label>Date</label>\n//                     <input type=\"date\" name=\"reservationDate\" className=\"input-field\" onChange={handleChange} required />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label>Time</label>\n//                     <input type=\"time\" name=\"time\" className=\"input-field\" onChange={handleChange} required />\n//                 </div>\n//                 <button type=\"submit\">Book</button>\n//             </form>\n//         </div>\n//     );\n// }\n//\n// export default BookingForm;\n\n// BookingForm.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from '../axiosConfig';  // Make sure this is pointing to your axios config file with the token setup\n\nfunction BookingForm() {\n    const [bookingDetails, setBookingDetails] = useState({\n        name: '',\n        email: '',\n        phone: '',\n        date: '',\n        time: ''\n    });\n    const navigate = useNavigate();\n\n    const handleChange = (event) => {\n        setBookingDetails({\n            ...bookingDetails,\n            [event.target.name]: event.target.value\n        });\n    };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const { name, email, phone, date, time } = bookingDetails;\n\n        try {\n            const response = await axios.post('/api/reservations', {\n                name,\n                email,\n                phone,\n                date: `${date}T${time}:00`,\n                status: 'Booked'\n            });\n            navigate('/confirmation');\n        } catch (error) {\n            console.error('Error making reservation:', error.response ? error.response.data : 'No response from server');\n        }\n    };\n\n    return (\n        <div className=\"booking-form\">\n            <form onSubmit={handleSubmit}>\n                {/* Form fields */}\n                <button type=\"submit\" className=\"submit-button\">Submit</button>\n            </form>\n        </div>\n    );\n}\n\nexport default BookingForm;\n\n\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,gBAAgB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC;IACjDS,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACTC,IAAI,EAAE,EAAE;IACRC,IAAI,EAAE;EACV,CAAC,CAAC;EACF,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9B,MAAMc,YAAY,GAAIC,KAAK,IAAK;IAC5BR,iBAAiB,CAAC;MACd,GAAGD,cAAc;MACjB,CAACS,KAAK,CAACC,MAAM,CAACR,IAAI,GAAGO,KAAK,CAACC,MAAM,CAACC;IACtC,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,KAAK,IAAK;IAClCA,KAAK,CAACI,cAAc,CAAC,CAAC;IACtB,MAAM;MAAEX,IAAI;MAAEC,KAAK;MAAEC,KAAK;MAAEC,IAAI;MAAEC;IAAK,CAAC,GAAGN,cAAc;IAEzD,IAAI;MACA,MAAMc,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,mBAAmB,EAAE;QACnDb,IAAI;QACJC,KAAK;QACLC,KAAK;QACLC,IAAI,EAAG,GAAEA,IAAK,IAAGC,IAAK,KAAI;QAC1BU,MAAM,EAAE;MACZ,CAAC,CAAC;MACFT,QAAQ,CAAC,eAAe,CAAC;IAC7B,CAAC,CAAC,OAAOU,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACK,IAAI,GAAG,yBAAyB,CAAC;IAChH;EACJ,CAAC;EAED,oBACItB,OAAA;IAAKuB,SAAS,EAAC,cAAc;IAAAC,QAAA,eACzBxB,OAAA;MAAMyB,QAAQ,EAAEV,YAAa;MAAAS,QAAA,eAEzBxB,OAAA;QAAQ0B,IAAI,EAAC,QAAQ;QAACH,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;AAAC5B,EAAA,CA3CQD,WAAW;EAAA,QAQCJ,WAAW;AAAA;AAAAkC,EAAA,GARvB9B,WAAW;AA6CpB,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}