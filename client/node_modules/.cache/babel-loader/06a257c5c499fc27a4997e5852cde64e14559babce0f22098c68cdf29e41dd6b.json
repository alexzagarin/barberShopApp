{"ast":null,"code":"// import React, { useState } from 'react';\n// import axios from '../axiosConfig';\n// import { useLocation, useNavigate } from 'react-router-dom';\n//\n// function BookingForm() {\n//     const location = useLocation();\n//     const navigate = useNavigate();\n//     const queryParams = new URLSearchParams(location.search);\n//     const serviceId = queryParams.get('serviceId');\n//\n//     const [bookingDetails, setBookingDetails] = useState({\n//         reservationDate: '',\n//         time: ''\n//     });\n//\n//     const handleChange = (event) => {\n//         setBookingDetails({ ...bookingDetails, [event.target.name]: event.target.value });\n//     };\n//\n//     const handleSubmit = async (event) => {\n//         event.preventDefault();\n//         const fullDateTime = `${bookingDetails.reservationDate}T${bookingDetails.time}:00`; // Ensure correct date-time format\n//         try {\n//             await axios.post('/api/reservations', {\n//                 serviceId,\n//                 reservationDate: fullDateTime,\n//                 status: 'Booked'\n//             });\n//             navigate('/confirmation');\n//         } catch (error) {\n//             console.error('Error making reservation:', error.response.data);\n//         }\n//     };\n//\n//     return (\n//         <div className=\"booking-form\">\n//             <form onSubmit={handleSubmit}>\n//                 <div className=\"form-group\">\n//                     <label>Date</label>\n//                     <input type=\"date\" name=\"reservationDate\" className=\"input-field\" onChange={handleChange} required />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label>Time</label>\n//                     <input type=\"time\" name=\"time\" className=\"input-field\" onChange={handleChange} required />\n//                 </div>\n//                 <button type=\"submit\">Book</button>\n//             </form>\n//         </div>\n//     );\n// }\n//\n// export default BookingForm;\n\n// import React, { useState } from 'react';\n// import axios from '../axiosConfig';\n// import { useLocation, useNavigate } from 'react-router-dom';\n//\n// function BookingForm() {\n//     const location = useLocation();\n//     const navigate = useNavigate();\n//     const queryParams = new URLSearchParams(location.search);\n//     const serviceId = queryParams.get('serviceId'); // Ensure this is the correct format\n//     const customerId = localStorage.getItem('customerId'); // Ensure this is being set on login\n//\n//     // Temporary fix: Use dummy values for customerId and serviceId if not present\n//     const validCustomerId = customerId || '507f1f77bcf86cd799439011'; // Example valid ObjectId\n//     const validServiceId = serviceId || '507f1f77bcf86cd799439011'; // Example valid ObjectId\n//\n//     const [bookingDetails, setBookingDetails] = useState({\n//         reservationDate: '',\n//         time: ''\n//     });\n//\n//     const handleChange = (event) => {\n//         setBookingDetails({ ...bookingDetails, [event.target.name]: event.target.value });\n//     };\n//\n//     const handleSubmit = async (event) => {\n//         event.preventDefault();\n//         const fullDateTime = `${bookingDetails.reservationDate}T${bookingDetails.time}:00`;\n//         try {\n//             await axios.post('/api/reservations', {\n//                 customerId: validCustomerId,\n//                 serviceId: validServiceId,\n//                 reservationDate: fullDateTime,\n//                 status: 'Booked'\n//             });\n//             navigate('/confirmation');\n//         } catch (error) {\n//             console.error('Error making reservation:', error.response?.data || error.message);\n//         }\n//     };\n//\n//     return (\n//         <div className=\"booking-form\">\n//             <form onSubmit={handleSubmit}>\n//                 <div className=\"form-group\">\n//                     <label>Date</label>\n//                     <input type=\"date\" name=\"reservationDate\" className=\"input-field\" onChange={handleChange} required />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label>Time</label>\n//                     <input type=\"time\" name=\"time\" className=\"input-field\" onChange={handleChange} required />\n//                 </div>\n//                 <button type=\"submit\">Book</button>\n//             </form>\n//         </div>\n//     );\n// }\n//\n// export default BookingForm;","map":{"version":3,"names":[],"sources":["/Users/mariiakotienieva/Downloads/barbershopalex/client/src/components/BookingForm.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import axios from '../axiosConfig';\n// import { useLocation, useNavigate } from 'react-router-dom';\n//\n// function BookingForm() {\n//     const location = useLocation();\n//     const navigate = useNavigate();\n//     const queryParams = new URLSearchParams(location.search);\n//     const serviceId = queryParams.get('serviceId');\n//\n//     const [bookingDetails, setBookingDetails] = useState({\n//         reservationDate: '',\n//         time: ''\n//     });\n//\n//     const handleChange = (event) => {\n//         setBookingDetails({ ...bookingDetails, [event.target.name]: event.target.value });\n//     };\n//\n//     const handleSubmit = async (event) => {\n//         event.preventDefault();\n//         const fullDateTime = `${bookingDetails.reservationDate}T${bookingDetails.time}:00`; // Ensure correct date-time format\n//         try {\n//             await axios.post('/api/reservations', {\n//                 serviceId,\n//                 reservationDate: fullDateTime,\n//                 status: 'Booked'\n//             });\n//             navigate('/confirmation');\n//         } catch (error) {\n//             console.error('Error making reservation:', error.response.data);\n//         }\n//     };\n//\n//     return (\n//         <div className=\"booking-form\">\n//             <form onSubmit={handleSubmit}>\n//                 <div className=\"form-group\">\n//                     <label>Date</label>\n//                     <input type=\"date\" name=\"reservationDate\" className=\"input-field\" onChange={handleChange} required />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label>Time</label>\n//                     <input type=\"time\" name=\"time\" className=\"input-field\" onChange={handleChange} required />\n//                 </div>\n//                 <button type=\"submit\">Book</button>\n//             </form>\n//         </div>\n//     );\n// }\n//\n// export default BookingForm;\n\n// import React, { useState } from 'react';\n// import axios from '../axiosConfig';\n// import { useLocation, useNavigate } from 'react-router-dom';\n//\n// function BookingForm() {\n//     const location = useLocation();\n//     const navigate = useNavigate();\n//     const queryParams = new URLSearchParams(location.search);\n//     const serviceId = queryParams.get('serviceId'); // Ensure this is the correct format\n//     const customerId = localStorage.getItem('customerId'); // Ensure this is being set on login\n//\n//     // Temporary fix: Use dummy values for customerId and serviceId if not present\n//     const validCustomerId = customerId || '507f1f77bcf86cd799439011'; // Example valid ObjectId\n//     const validServiceId = serviceId || '507f1f77bcf86cd799439011'; // Example valid ObjectId\n//\n//     const [bookingDetails, setBookingDetails] = useState({\n//         reservationDate: '',\n//         time: ''\n//     });\n//\n//     const handleChange = (event) => {\n//         setBookingDetails({ ...bookingDetails, [event.target.name]: event.target.value });\n//     };\n//\n//     const handleSubmit = async (event) => {\n//         event.preventDefault();\n//         const fullDateTime = `${bookingDetails.reservationDate}T${bookingDetails.time}:00`;\n//         try {\n//             await axios.post('/api/reservations', {\n//                 customerId: validCustomerId,\n//                 serviceId: validServiceId,\n//                 reservationDate: fullDateTime,\n//                 status: 'Booked'\n//             });\n//             navigate('/confirmation');\n//         } catch (error) {\n//             console.error('Error making reservation:', error.response?.data || error.message);\n//         }\n//     };\n//\n//     return (\n//         <div className=\"booking-form\">\n//             <form onSubmit={handleSubmit}>\n//                 <div className=\"form-group\">\n//                     <label>Date</label>\n//                     <input type=\"date\" name=\"reservationDate\" className=\"input-field\" onChange={handleChange} required />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label>Time</label>\n//                     <input type=\"time\" name=\"time\" className=\"input-field\" onChange={handleChange} required />\n//                 </div>\n//                 <button type=\"submit\">Book</button>\n//             </form>\n//         </div>\n//     );\n// }\n//\n// export default BookingForm;\n\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}